# INPUT pair potential params
variable A equal 32580.3
variable B equal -25848.1
variable k1 equal 13.1579
variable k2 equal 12.5
variable Ak1 equal $A*${k1}
variable Bk2 equal $B*${k2}

# Initialization
units		lj
dimension 	2
atom_style	hybrid sphere dipole
boundary        p p p
neighbor        0.5 bin
neigh_modify    every 1 delay 0 check yes

#temperature (in reduced units)
variable temp   equal 1.0

# System definition
read_data example_data_file.txt

pair_style yukawacustom2 ${k1} ${k2} 0.6 25.0 #0.6 is the Hamaker constant
pair_coeff 1 1 ${Ak1} ${Bk2} 
pair_write 1 1 1000 r 0.01 5.0 pair.txt pairpot

#minimize energy first to avoid overlapping particles
thermo 10
minimize 1e-4 1e-4 1000 1000
reset_timestep 0

fix dynamics all brownian/sphere 1.0 12908410 gamma_t 1835 gamma_r 612
fix 2d  all enforce2d #keep z zero

#sample radial distribution function g(r) and save it to lj.rdf
#the 100 100 10000 means sample every 100 steps, make 100 of such samples, and save at 10000 steps
compute rdf all rdf 500 
fix saverdf all ave/time 1000 3750 3750000 c_rdf[1] c_rdf[2] file lj.rdf mode vector


#calculation of msd and D
compute	msd all msd com yes
fix		msd all ave/time 1 1 375000 c_msd[4] file msddumpfile
variable       twopoint equal c_msd[4]/4/(step*dt+1.0e-6)
fix            9 all vector 375000 c_msd[4] #use global value as input every few timesteps
variable       fitslope equal slope(f_9)/4/(375000*dt)

dump           mydmp all custom 7500 brownian.lammpstrj id type x y z radius mass # 5frames per second

thermo         37500 #every second 37500
thermo_style custom step temp ke pe c_msd[4]
thermo_modify flush yes

#time step of integrator
timestep	0.005

#number of integration steps to run
run		80000000 

write_restart restart.run1
